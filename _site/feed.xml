<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-06-21T13:37:37+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">mrexox personal blog</title><subtitle>Built with Jekyll and love ðŸ§¡</subtitle><entry><title type="html">ðŸ‘¶ Linux basic kernel module</title><link href="http://localhost:4000/driver/2020/06/21/Linux-basic-kernel-module.html" rel="alternate" type="text/html" title="ðŸ‘¶ Linux basic kernel module" /><published>2020-06-21T12:57:45+03:00</published><updated>2020-06-21T12:57:45+03:00</updated><id>http://localhost:4000/driver/2020/06/21/Linux-basic-kernel-module</id><content type="html" xml:base="http://localhost:4000/driver/2020/06/21/Linux-basic-kernel-module.html">&lt;h1 id=&quot;hi-developer&quot;&gt;Hi, developer&lt;/h1&gt;

&lt;p&gt;This it an article about how to write a basic &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_world&lt;/code&gt; linux module for 4.19 kernel.&lt;/p&gt;

&lt;h1 id=&quot;first-code&quot;&gt;First: code&lt;/h1&gt;

&lt;p&gt;You can browse the sources also:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;hello-world.c&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;linux/init.h&amp;gt;
#include &amp;lt;linux/module.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MODULE_LICENSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Dual BSD/GPL&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* MODULE_LICENSE is a required macro */&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/* This will print to tty0 and /var/log/kern.log */&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KERN_ALERT&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello, world!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hello_exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;printk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KERN_ALERT&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Goodbye, man!&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*
 * Every module has its initialize and exit function.
 * This is how they are registered.
 */&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;module_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hello_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;module_exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hello_exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Makefile&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-makefile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;KERNELDIR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?=&lt;/span&gt; /lib/modules/&lt;span class=&quot;nf&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shell&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;)&lt;/span&gt;/build

&lt;span class=&quot;nl&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$(MAKE)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$(KERNELDIR)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$(CURDIR)&lt;/span&gt; modules

&lt;span class=&quot;nl&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.o &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;~ core .depend .&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cmd &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ko &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.mod.c .tmp_versions &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.symvers modules.order
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Kbuild&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-makefile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;obj-m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; hello-world.o
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;explanation&quot;&gt;Explanation&lt;/h1&gt;</content><author><name></name></author><summary type="html">Hi, developer</summary></entry><entry><title type="html">Evesync: package synchronization tool</title><link href="http://localhost:4000/clusterization/2019/06/20/Evesync.html" rel="alternate" type="text/html" title="Evesync: package synchronization tool" /><published>2019-06-20T12:32:43+03:00</published><updated>2019-06-20T12:32:43+03:00</updated><id>http://localhost:4000/clusterization/2019/06/20/Evesync</id><content type="html" xml:base="http://localhost:4000/clusterization/2019/06/20/Evesync.html">&lt;h1 id=&quot;hi-admin&quot;&gt;Hi, Admin!&lt;/h1&gt;

&lt;p&gt;There are a bunch of problems when deploying some code on multiple servers in one local network. It usually needs to be automized. While switching berween &lt;em&gt;cron&lt;/em&gt; and &lt;em&gt;ansible&lt;/em&gt; thereâ€™s a solution that is aimed to do all the job. Itâ€™s name is &lt;em&gt;evesync&lt;/em&gt;. It is now a ruby gem that allows to synchronize files and packages (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deb&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rpm&lt;/code&gt;) between multiple nodes.&lt;/p&gt;

&lt;p&gt;Please, keep in mind, the project is in development stage and some things are not implemented now.&lt;/p&gt;

&lt;h2 id=&quot;evesync&quot;&gt;EVESYNC&lt;/h2&gt;

&lt;p&gt;Itâ€™s a simple tool to automate packages and files update on different hosts, connected to one network. You need to configure it, start the daemons, and update some of the watched objects. See the &lt;a href=&quot;https://github.com/mrexox/evesync&quot;&gt;github page&lt;/a&gt; README file for more information and contact me if you are interested:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;mrexox@yahoo.com&quot;&gt;mrexox@yahoo.com&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;installing-evesync&quot;&gt;Installing evesync&lt;/h3&gt;
&lt;p&gt;Firs of all you need to install dependencies. For Rhel distro run:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# yum install rubygems ruby-devel make gcc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For Debian-based distro run:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# apt-get install rubygems ruby-dev make gcc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Evesync is available on &lt;a href=&quot;https://rubygems.org/gems/evesync&quot;&gt;rubygems.org&lt;/a&gt;, so it can be installed with a command:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# gem install evesync
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;running-evesync&quot;&gt;Running evesync&lt;/h3&gt;

&lt;p&gt;To start evesync you need to be root or make your user an owner of following directories:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;/var/run/evesync&lt;/li&gt;
  &lt;li&gt;/var/log/evesync&lt;/li&gt;
  &lt;li&gt;/var/lib/evesync&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Non-root users will not be able to install packages. Thus running as root is recommended.&lt;/p&gt;

&lt;p&gt;To start all daemons, go:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# evesync --run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To stop daemons, go:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# evesync --kill
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;adding-systemd-service&quot;&gt;Adding Systemd service&lt;/h3&gt;

&lt;p&gt;To make evesync a systemd service, you need to install it globally with a command&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# gem install --no-user-install evesync
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then create a file &lt;strong&gt;/usr/lib/systemd/system/evesync.service&lt;/strong&gt; with following content &lt;a href=&quot;https://github.com/mrexox/evesync/blob/master/systemd/evesync.service&quot;&gt;(or use this file from Github)&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Evesync daemons
Documentation=Starting all evesync daemons. Logs can be found in /var/log/evesync.
After=network.target

[Service]
Type=forking
ExecStart=/usr/bin/evesync --run
ExecStop=/usr/bin/evesync --kill
PIDFile=/var/run/evesync/evemond.pid

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then just enable and start the service:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# systemctl daemon-reload
# systemctl enable evesync.service
# systemctl start evesync.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Donâ€™t forget to install gem with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--no-user-install&lt;/code&gt; flag, to install it globally!&lt;/p&gt;

&lt;h3 id=&quot;contributing&quot;&gt;Contributing&lt;/h3&gt;

&lt;p&gt;See &lt;a href=&quot;https://github.com/mrexox/evesync/blob/master/README.md&quot;&gt;README.md&lt;/a&gt; for running tests and feel free to create issues and write e-mails to mrexox@yahoo.com&lt;/p&gt;

&lt;h3 id=&quot;upd-from-year-2020&quot;&gt;UPD: from year 2020&lt;/h3&gt;
&lt;p&gt;This tool is currently not supported, but if you are interested, contact me with your question.&lt;/p&gt;</content><author><name></name></author><summary type="html">Hi, Admin!</summary></entry></feed>